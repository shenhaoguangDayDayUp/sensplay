{"version":3,"sources":["common/function.js"],"names":["getClass","classname","ranger","undefined","document","getElementsByClassName","arr","getElementsByTagName","newarr","i","length","flsg","check","className","push","str","value","split","$","select","first","charAt","slice","getElementById","test","setText","obj","innerText","textContent","getStyle","attr","window","getComputedStyle","currentStyle","getchilds","box","type","childs","childNodes","nodeType","nodeValue","trim","firstChild","getNext","next","nextSibling","getPrevious","PreviousSibling","insertAfter","node","newnode","sibling","parent","parentNode","appendChild","insertBefore","appendBefore","appendAfter","xian","top","bottom","left","right","onmouseover","animate","width","offsetWidth","height","offsetHeight","onmouseout"],"mappings":"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","file":"function.js","sourcesContent":["// getClass(classname)\r\n// 获取指定拥有指定类名元素的集合\r\n// classname 指定的类名\r\n// 思路：\r\n// 一 判断浏览器\r\n// \tdocument.getElementsByClassName\r\n// 二 true\r\n// \t直接用document.getElementsByClassName()\r\n//    false\r\n//     已知方法来模拟：从所用的元素中筛选className是否等于指定的类名\r\n//     classname obj.className\r\nfunction getClass(classname,ranger){\r\n\tranger= ranger===undefined?document:ranger;\r\n\tif(document.getElementsByClassName){\r\n\t\treturn ranger.getElementsByClassName(classname);\r\n\t}else{\r\n\t\tvar arr=ranger.getElementsByTagName('*');\r\n\t\tvar newarr=[];\r\n\t\tfor(var i=0;i<arr.length;i++){\r\n\t\t\tvar flsg=check(arr[i].className,classname);\r\n\t\t\tif(flsg){\r\n\t\t\t\tnewarr.push(arr[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newarr;\t\r\n\t}\r\n}\r\n\r\nfunction check(str,value){\r\n\t// str转换成数组，里面是否有value\t\r\n\tvar arr=str.split(' ');\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i]==value){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction $(select,ranger){\r\n\tranger= ranger===undefined?document:ranger;\r\n\tvar first= select.charAt(0);\r\n\tif(first=='.'){\r\n\t\t//通过类名\r\n\t\treturn getClass(select.slice(1),ranger)\r\n\t}else if(first=='#'){\r\n\t\t//通过id\r\n\t\treturn ranger.getElementById(select.slice(1));\r\n\t}else if(/^[a-zA-Z][a-zA-Z1-6]{0,8}$/.test(select)){\r\n\t\t//通过标签\r\n\t\treturn ranger.getElementsByTagName(select);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// 设置或获取obj的文本\r\nfunction setText(obj,value){\r\n\tif(value){\r\n\t\tif(obj.innerText){\r\n\t\t\treturn obj.innerText=value;\r\n\t\t}else{\r\n\t\t\treturn obj.textContent=value;\r\n\t\t}\r\n\t}else{\r\n\t\tif(obj.innerText){\r\n\t\t\treturn obj.innerText;\r\n\t\t}else{\r\n\t\t\treturn obj.textContent;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 获取某一个指定对象的某一个形式\r\nfunction getStyle(obj,attr){\r\n\tif(window.getComputedStyle){\r\n\t\treturn getComputedStyle(obj,null)[attr];\r\n\t}else{\r\n\t\treturn obj.currentStyle[attr];\r\n\t}\r\n}\r\n\r\n\r\n\r\n// *********************************************************************************************************\r\n\r\n// 获取元素及非空的文本\r\n\r\n\r\nfunction getchilds(box,type){\r\n\tvar childs=box.childNodes;\r\n\tvar arr=[];\r\n    var type=type||false;\r\n    if(type){\r\n\r\n    \tfor(var i=0;i<obj.length;i++){\r\n\tif (childs[i].nodeType==1||(childs[i].nodeType==3&&childs[i].nodeValue.trim().length!=0)){\r\n\t\t\tarr.push(childs[i]);\r\n    }\r\n\t\r\n    }\r\n\treturn arr;\r\n\t}else{\r\n\tfor(var i=0;i<childs.length;i++){\r\n\t\tif(childs[i].nodeType==1){\r\n\t\t\tarr.push(childs[i]);\r\n\t\t}\r\n\t}\r\n\treturn arr;\r\n\t}\r\n\r\n}\r\n\r\n// 获取父元素的第一个非空的元素节点\r\nfunction firstChild(obj){\r\n\tvar  first=getchilds(obj)[0];\r\n\t\r\n\treturn first;\r\n\r\n}\r\n\r\n\r\n// 获取元素的下一个兄弟元素\r\n\r\n\r\n// 1获取兄弟元素\r\n// 2判断一下兄弟元素 是否为元素节点\r\n// 3若不是 更新一下next=next.Sibling\r\n    function getNext(obj){\t\t\t\r\n\t\t\tvar next=obj.nextSibling;\r\n\t\t\tif(next===null){\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\twhile(next.nodeType!=1){\r\n\t\t\t\tnext=next.nextSibling;\r\n\t\t\t\tif(next==null){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn next;\r\n\t\t}\r\n\t\r\n\r\n// 获取上一个 兄弟元素元素节点\r\nfunction getPrevious(obj){           \r\n         var next=obj.PreviousSibling;\r\n         if(next===null){\r\n             return false;\r\n         }\r\n         while(next.nodeType==3||next.nodeType==8){\r\n             next=next.PreviousSibling;\r\n             if(next==null){\r\n                 return false;\r\n             }\r\n         }\r\n         return next;\r\n     }\r\n\r\n\r\n\r\n\r\n// 把一个特定的元素 node插入到指定元素 newnode的后面\r\n\r\n// insertAfter   \r\n// 获取newnode的下一个元素节点\r\n// 获取newnode父元素的\r\n\r\n\r\n\r\nfunction insertAfter(node,newnode){\r\n\tvar sibling=newnode.nextSibling;\r\n\t\r\n\r\n\tif (sibling) {\r\n\t\tvar parent=newnode.parentNode;\r\n\t\tparent.appendChild(node);\r\n\r\n\t  \r\n\r\n\t}else{\r\n    var parent=newnode.parentNode;\r\n\tparent.insertBefore(node,sibling);\r\n  } \r\n\r\n}\r\n// 把一个元素node放到父元素parent的第一个元素前面；\r\n// 获取父元素的第一个元素\r\n\r\nfunction appendBefore(parent,node ){\r\n\tvar first=firstChild(parent);\r\n\tparent.insertBefore(node,first);\r\n}\r\n\r\nfunction appendAfter(parent,node ){\r\n\tparent.appendChild(node);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// 跳动的线\r\nfunction xian(obj){\r\nvar top=$('.top',obj)[0];\r\nvar bottom=$('.bottom',obj)[0];\r\nvar left=$('.left',obj)[0];\r\nvar right=$('.right',obj)[0];\t\r\nobj.onmouseover=function(){\r\n\tanimate(top,{width:obj.offsetWidth});\r\n\tanimate(left,{height:obj.offsetHeight});\r\n\tanimate(bottom,{width:obj.offsetWidth});\r\n\tanimate(right,{height:obj.offsetHeight})\r\n\r\n};\r\n obj.onmouseout=function(){\r\n\tanimate(top,{width:0});\r\n\tanimate(left,{height:0});\r\n\tanimate(bottom,{width:0});\r\n\tanimate(right,{height:0});\r\n\r\n  }\r\n \r\n// }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}